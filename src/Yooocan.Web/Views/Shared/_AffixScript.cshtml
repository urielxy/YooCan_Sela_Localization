<script>var Affix = function (t, o) { this.options = $.extend({}, Affix.DEFAULTS, o), this.$window = $(window).on("scroll.bs.affix.data-api", $.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", $.proxy(this.checkPositionWithEventLoop, this)), this.$element = $(t), this.affixed = this.unpin = null, this.checkPosition() }; Affix.RESET = "affix affix-top affix-bottom", Affix.DEFAULTS = { offset: 0 }, Affix.prototype.checkPositionWithEventLoop = function () { setTimeout($.proxy(this.checkPosition, this), 1) }, Affix.prototype.checkPosition = function () { if (this.$element.is(":visible")) { var t = $(document).height(), o = this.$window.scrollTop(), i = this.$element.offset(), f = this.options.offset, e = f.top, n = f.bottom; "object" != typeof f && (n = e = f), "function" == typeof e && (e = f.top()), "function" == typeof n && (n = f.bottom()); var s = null != this.unpin && o + this.unpin <= i.top ? !1 : null != n && i.top + this.$element.height() >= t - n ? "bottom" : null != e && e >= o ? "top" : !1; this.affixed !== s && (this.unpin && this.$element.css("top", ""), this.affixed = s, this.unpin = "bottom" == s ? i.top - o : null, this.$element.removeClass(Affix.RESET).addClass("affix" + (s ? "-" + s : "")), "bottom" == s && this.$element.offset({ top: document.body.offsetHeight - n - this.$element.height() })) } }; var old = $.fn.affix; $.fn.affix = function (t) { return this.each(function () { var o = $(this), i = o.data("bs.affix"), f = "object" == typeof t && t; i || o.data("bs.affix", i = new Affix(this, f)), "string" == typeof t && i[t]() }) }, $.fn.affix.Constructor = Affix, $.fn.affix.noConflict = function () { return $.fn.affix = old, this }, $(window).on("load", function () {$('[data-spy="affix"]').each(function () {var t = $(this), o = t.data(); o.offset = o.offset || {}, o.offsetBottom && (o.offset.bottom = o.offsetBottom), o.offsetTop && (o.offset.top = o.offsetTop), t.affix(o) }) });</script>